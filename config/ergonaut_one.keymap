#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp C>,
                <&macro_release>,
                <&kp LCTRL &kp C>;

            label = "COPY";
        };

        lcopy: lcopy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT &kp C>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT &kp C>;

            label = "LCOPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp V>,
                <&macro_release>,
                <&kp LCTRL &kp V>;

            label = "PASTE";
        };

        lpaste: lpaste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT &kp V>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT &kp V>;

            label = "LPASTE";
        };

        find: find {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp F>,
                <&macro_release>,
                <&kp LCTRL &kp F>;

            label = "FIND";
        };

        select: select {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp A>,
                <&macro_release>,
                <&kp LCTRL &kp A>;

            label = "SELECT";
        };

        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp Z>,
                <&macro_release>,
                <&kp LCTRL &kp Z>;

            label = "UNDO";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp X>,
                <&macro_release>,
                <&kp LCTRL &kp X>;

            label = "CUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAIN";
            bindings = <
&none  &kp SQT         &kp COMMA       &kp PERIOD   &kp P             &kp Y      &kp F          &kp G             &kp C        &kp R           &kp L           &none
&none  &mt LEFT_ALT A  &mt LEFT_WIN O  &mt LCTRL E  &mt LEFT_SHIFT U  &lt 3 I    &kp D          &mt LEFT_SHIFT H  &mt LCTRL T  &mt LEFT_WIN N  &mt LEFT_ALT S  &none
&none  &kp SEMICOLON   &kp Q           &kp J        &kp K             &kp X      &kp N          &kp M             &kp W        &kp V           &kp Z           &none
                                       &kp ENTER    &lt 1 TAB         &kp SPACE  &kp BACKSPACE  &lt 2 DELETE      &kp ESC
            >;
        };

        lower_layer {
            display-name = "SYM";
            bindings = <
&none  &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN  &kp ASTERISK  &kp EQUAL      &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE  &kp TILDE       &none
&none  &kp AT_SIGN        &kp DOLLAR     &kp PLUS          &kp PIPE      &kp PERCENT    &none            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS  &kp UNDERSCORE  &none
&none  &kp COLON          &kp HASH       &kp BACKSLASH     &kp CARET     &kp AMPERSAND  &none            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SLASH  &kp QUESTION    &none
                                         &trans            &trans        &trans         &trans           &trans                &trans
            >;
        };

        raise_layer {
            display-name = "NUM";
            bindings = <
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4  &kp NUMBER_5  &kp F22  &kp F13   &kp F14  &kp F15  &kp RIGHT  &none
&none  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8    &kp NUMBER_9  &kp NUMBER_0  &kp F23  &kp LEFT  &kp F19  &kp F20  &kp F21    &none
&none  &none         &none         &kp DOWN_ARROW  &kp UP        &none         &kp F24  &kp F16   &kp F17  &kp F18  &none      &none
                                   &trans          &trans        &trans        &trans   &trans    &trans
            >;
        };

        adjust_layer {
            display-name = "FUN";
            bindings = <
&bt BT_CLR_ALL  &kp CAPS  &sk LEFT_SHIFT  &undo       &cut   &out OUT_TOG  &none  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_CLR_ALL
&bt BT_NXT      &copy     &paste          &select     &find  &none         &none  &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_NXT
&bootloader     &lcopy    &lpaste         &caps_word  &none  &sys_reset    &none  &kp F9  &kp F10  &kp F11  &kp F12  &bootloader
                                          &none       &none  &none         &none  &none   &none
            >;
        };
    };
};
